# Generated by Django 3.2.9 on 2021-12-01 09:28

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Dealer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('image', models.ImageField(blank=True, null=True, upload_to='dealer/', verbose_name='Изображение')),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('vin', models.CharField(max_length=100, unique=True, verbose_name='VIN код')),
                ('brand', models.CharField(max_length=255, verbose_name='Марка')),
                ('price', models.IntegerField(verbose_name='Стоимость')),
                ('image', models.ImageField(upload_to='vehicle/%Y/%m/%d/', verbose_name='Изображение')),
                ('car_model', models.CharField(max_length=255, verbose_name='Модель')),
                ('color', models.CharField(max_length=100, verbose_name='Цвет')),
                ('add_to_dealer', models.DateTimeField(auto_now_add=True, verbose_name='Дата первичного поступления к дилеру')),
                ('add_to_dealer_center', models.DateTimeField(blank=True, null=True, verbose_name='Дата поступления в дилерский центр')),
                ('dealer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_dealer', to='dealers_and_dealer_centers.dealer', verbose_name='Наименование дилера')),
            ],
        ),
        migrations.CreateModel(
            name='DealerCenter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('slug', models.SlugField(unique=True, verbose_name='Слаг')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('telephone_number', models.CharField(max_length=50, verbose_name='Официальный номер')),
                ('image', models.ImageField(blank=True, null=True, upload_to='dealer_centers/', verbose_name='Изображение')),
                ('vehicle_sale', models.BooleanField(default=False, verbose_name='Продажа транспортных средств')),
                ('vehicle_repair', models.BooleanField(default=False, verbose_name='Ремонт транспортных средств')),
                ('composition_of_spare_parts', models.BooleanField(default=False, verbose_name='Склад запасных частей')),
                ('car_warehouse', models.BooleanField(default=False, verbose_name='Склад автомобилей')),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
        ),
        migrations.AddField(
            model_name='dealer',
            name='car_saloons',
            field=models.ManyToManyField(related_name='dealer_centers', to='dealers_and_dealer_centers.DealerCenter', verbose_name='Дилерские центры'),
        ),
    ]
